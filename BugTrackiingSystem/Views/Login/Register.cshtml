@model BugTrackiingSystem.Models.tblLogin


@if (TempData["msg"] != null)
{
    <div class="alert alert-success show ">
        <button class="close" data-dismiss="alert">&times;</button>
        <strong>Success !</strong> @TempData["msg"]

    </div>

}
<style>
     .containe {
         margin-left: 200px;
         margin-right: 250px;
         margin-top: 40px;
         padding: 10px;
         padding-left: 130px;
        /* border: 1px solid black;*/
        /* border-radius: 0px 35px 0px 35px;*/
     
     }
     /* label{
       margin-right:10px;

    }*/
</style>
<br />

<div class="containe well">
    <h2>Create New User</h2>
    @using (Html.BeginForm())
    {
        @*@Html.AntiForgeryToken()*@

  <div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "" } })
            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.PasswordFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "" } })
            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.Role, new { htmlAttributes = new { @class = "" } })*@
              @Html.DropDownListFor(model=>model.Role,new List<SelectListItem>
         {
             new SelectListItem(){Text="Admin",Value="Admin"},
              new SelectListItem(){Text="Lead",Value="Lead"},
               new SelectListItem(){Text="Developer",Value="Developer"},
         })    
            @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Register" class="btn btn-primary" />
          
        </div>
    </div>
</div>
    }

    @*<div>
            @Html.ActionLink("Back to List", "Index")
        </div>*@

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }

</div>
